1、PBL - Problem-Based Learning
它最早起源于20世纪50年代的医学教育，现已成为跨学科的学习方式，可以促进学生不断地思考，学生为解决问题需要查阅课外资料，归纳、整理所学的知识与技能，有利培养学生的自主学习精神。
适合于低年级的入门教学。

2、翻转挑战
先给目标，再通过讨论给予答案参考。 - 参考可汗学院教学方式
翻转课堂（Flipped classroom），又译为翻转教室、颠倒教室，是一种新的教学模式，2007年起源于美国，翻转课堂会先由学生在家中看老师或其他人准备的课程内容，到学校时，学生和老师一起完成作业，并且进行问题及讨论。由于学生及老师的角色对调，而在家学习，在学校完成作业的方式也和传统教学不同，因此称为“翻转课堂”。


3、放空教学法
https://www.zhihu.com/question/61161860?


scratch不仅是用于教会孩子们一些编程的概念，更包含了【物理】和【数学知识】的模拟及【讲述故事】的一些练习。

SCRATCH的发明人Mitch Resnick米奇·雷斯尼克是西摩尔（LOGO语言发明者，也是LEGO（乐高） RCX（第一代乐高可编程机器人）的共同创作人）的得意门生，Mitch Resnick米奇·雷斯尼克借鉴了LOGO语言和乐高积木的设计精华，在2003年带领团队开发出了专门为青少年学习编程使用的工具——Scratch。）

作者：乐高李老师
链接：https://www.zhihu.com/question/355560585/answer/1018566087
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



学习编程的好处：

少儿编程的火热最开始是人工智能发展带起来的，因为编程是人工智能的底层逻辑，好比学英语帮孩子连接世界，学编程其实是帮助孩子连接未来。学编程一个最基本的目的是让孩子能够适应社会的需要。

未来必定是人工智能时代，随着科技的进步，各行各业将受到改造。我们今天看到的一些职业会因科技的进步而慢慢消失，但同时会有更多新兴职业的产生，而这些职业可能需要任职者具备编程能力才可以胜任。尽早地让孩子学习编程，能够让他们更好地适应未来的科技社会，并在未来具备更强的竞争力。

当然编程有必要的一面，也有现实的利好：

1、让孩子学习编程，培养孩子的逻辑思维和解决问题的能力

“编程思维（computational thinking）”就是“理解问题——找出路径”的思维过程，它由分解、模式识别、抽象、算法四个步骤组成。通过这四个步骤每一个小问题被单独检视、思考，搜索解决方案；然后，聚焦几个重要节点，形成解决思路；最后，设计步骤，执行——问题解决。

同时，根据教育认知学，孩子会在6岁左右开始形成抽象逻辑思维，整个6-12岁是抽象逻辑思维的最佳形成期。所以学编程的最佳时机是小学段，趁孩子现在课业负担不重，逻辑思维也快，帮他们掌握一门有益终生的技能，就是在正确的时间做正确的事。

2、让孩子学习编程，有助于学科能力的提高

很多学编程的家长会发现，在孩子学习了编程后，学习主动性提高了，部分科目成绩也有所的提高，比如数学。这是为什么呢？

以数学为例，数学是有两个重要的能力构成的，一个是运算能力，一个是解题能力。中国的孩子普遍会有强大的运算能力，但是他们的解题能力通常不够。

这是因为不少孩子通过刷题或背题将很多复杂的运算变成了不需要运算过程的平滑运算，解题的时候更多是生搬硬套，在一般的学习过程中缺乏对语言能力、逻辑的思维能力和运算能力的训练。而这个方面的训练，恰恰是编程学习最擅长的。

在编程学习的过程中，孩子的综合学习能力通过训练得以提升，从而作用到其他学科的学习，在一定意义上有助于提高学科能力。

3、让孩子学习编程，可以为升学加码

就升学而言，在特长生加分之类的政策被取消后，名校自主招生更偏向于科创人才——在大型科创竞赛中，获得荣誉的学生，比如全国青少年信息学奥林匹克竞赛（NOI）。

学习编程后孩子可以参加此类竞赛，NOI比赛含金量较高，拿到名次对升学影响较大，得到铜牌就有保送或自主招生降分录取资格。杭州15岁高三女孩郭文景被哈佛录取的重要原因，正是获得了奥利匹克信息竞赛奖项。



 计算思维（https://zhuanlan.zhihu.com/p/27398109）：
 
 关于计算思维，作者说道“什么是计算思维？ AI研究员Paul Rosenbloom的解释集中在两个关系：相互作用和实现…… “计算思维”解释了计算思维如何超越分析和解决问题的技能，它包含一种想象的方法，通观察类比和构建隐喻……”关于算法思维，作者这样介绍“算法是计算机科学的中心 - 计算思维正在形成算法思维的习惯。为了使程序符合算法的要求，它必须具有以下属性：有限性，确定性，有效性，以及具有一个或多个输入和一个或多个输出。算法是确定的，抽象的工件和程序知识……”
 
 2016年度ISTE（国际技术教育协会）学生标准将计算思维者的目标定义为“学生制定和运用理解和解决问题的策略，利用技术方法的力量开发和测试解决方案”。对于学生成为计算思维者，他们必须开发他们在这方面的技能。乐高教育认为计算思维是分析思维的基础技能，将支持学生通过计算机和计算机应用程序来解决问题。 学生不仅需要学习如何处理和解决一般问题，而且要通过数学或计算过程的增加部分来解决问题。 在这些过程中寻求成功将会更好地使学生在未来使用编码和计算应用程序。计算思维包括分解，泛化，算法思维，评估和抽象。 这些步骤一起教会学生如何处理问题并在计算环境中解决问题的基础。 有趣的是，编码只是这种系统方法的一部分。
 
 ①分解：教导学生将问题分解成更小的块。 这种方法使学生能够在更易于管理的部分中看到问题，而不是立即被整个问题压倒在脑后。 学生了解到，有可能单独处理问题的一部分，然后将这些部分重新组合起来，以获得一个完整的解决方案。 这种方法可帮助学生学习如何消除问题的复杂性，使其更易于管理。
 
 ②概括，也被称为模式识别，挑战学生观察问题的块，以确定什么样的模式出现。 可能是熟悉的问题的一部分，允许学生应用已知的解决方案或自动化过程。
 
 ③算法思维： 这样可以让学生们一起分一步一步的解决问题。 当学生已经定义了这些步骤时，他们能够在他们的计算应用程序中工作来编程步骤（即编码）来解决问题。 这个阶段允许学生制定一个计划并遵循该计划，看是否提供了所需的解决方案。
 
 ④评价。 这是让学生在完成这一过程中学习的重要一步，以确保他们了解如何评估解决方案如何满足问题的需求。 这一步在计算思维中并不常用，但是对于正在发展解释和支持他们的解决方案的能力的学生来说，这个问题至关重要。 它要求学生考虑是否满足了问题的所有需求，以及为什么这个解决方案是最合适的。 这个步骤还可以通过准备成功的证据来准备学生分享他们的工作。
 
 ⑤抽象。 这是一个最后一步，允许学生反思已经解决的问题，看看是否有可以在计算系统中建立的一般规则。 通过这种方式，学生可以在计算系统中开发自动化流程，以获得将来出现的类似问题。 这一步也有助于学生将解决方案的简单术语进行抛光，从而使之更适用于将来的其他问题。